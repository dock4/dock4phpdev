---
services:
    workspace:
        build:
            context: ./workspace
        volumes:
            - ${WORK_ROOT}:/var/www
            - ~/.ssh:/home/worker/.ssh:ro
        environment:
            - TZ=${TZ}
        tty: true
        user: ubuntu
        # ports:
        #     - "1215:1215"

    # php56-fpm:
    #     build:
    #         context: ./php
    #         args:
    #             - PHP_VERSION_ARG=5.6
    #     volumes:
    #         - ${WORK_ROOT}:/var/www
    #     environment:
    #         - TZ=${TZ}
    # php72-fpm:
    #     build:
    #         context: ./php
    #         args:
    #             - PHP_VERSION_ARG=7.2
    #     volumes:
    #         - ${WORK_ROOT}:/var/www
    #     environment:
    #         - TZ=${TZ}
    # php73-fpm:
    #     build:
    #         context: ./php
    #         args:
    #             - PHP_VERSION_ARG=7.3
    #     volumes:
    #         - ${WORK_ROOT}:/var/www
    #     environment:
    #         - TZ=${TZ}
    php74-fpm:
        build:
            context: ./php
            args:
                - PHP_VERSION_ARG=7.4
        volumes:
            - ${WORK_ROOT}:/var/www
        environment:
            - TZ=${TZ}

    nginx:
        build:
            context: ./nginx
        volumes:
            - ${WORK_ROOT}:/var/www
            - ./log/nginx:/var/log/nginx
            - ./nginx/sites/:/etc/nginx/sites-available
        environment:
            - TZ=${TZ}
        ports:
            - "${NGINX_HTTP_PORT}:80"
            - "${NGINX_HTTPS_PORT}:443"
        depends_on:
            # - php56-fpm
            # - php72-fpm
            # - php73-fpm
            - php74-fpm

    mysql:
        build:
            context: ./mysql
        volumes:
            - ${DATA_ROOT}mysql:/var/lib/mysql
            - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        environment:
            - TZ=${TZ}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        ports:
            - "${MYSQL_PORT}:3306"
    mysql80:
        build:
            context: ./mysql/8.0
        volumes:
            - ${DATA_ROOT}mysql80:/var/lib/mysql
            - ${MYSQL_80_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        environment:
            - TZ=${TZ}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        ports:
            - "${MYSQL_80_PORT}:3306"
    postgres:
        build:
            context: ./postgres
            args:
                - POSTGRES_VERSION=${POSTGRES_VERSION}
        volumes:
            - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        environment:
            - TZ=${TZ}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        ports:
            - ${POSTGRES_PORT}:5432

    # https://hub.docker.com/_/redis
    redis:
        image: redis:latest
        volumes:
            - ${DATA_ROOT}redis:/data
        environment:
            - TZ=${TZ}
        ports:
            - "${REDIS_PORT}:6379"

    # https://docs.min.io/docs/minio-docker-quickstart-guide
    # https://docs.min.io/docs/deploy-minio-on-docker-compose.html
    minio:
        image: quay.io/minio/minio
        command: server --console-address ":9001" /data{1...4}
        volumes:
            - ${DATA_ROOT}minio/data1:/data1
            - ${DATA_ROOT}minio/data2:/data2
            - ${DATA_ROOT}minio/data3:/data3
            - ${DATA_ROOT}minio/data4:/data4
            # - ${DATA_ROOT}minio/data5:/data5
        ports:
            - "${MINIO_PORT}:9000"
            - "${MINIO_CONSOLE_PORT}:9001"
        environment:
            - TZ=${TZ}
            - MINIO_ROOT_USER=${MINIO_ROOT_USER}
            - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}

    # https://hub.docker.com/r/phpmyadmin/phpmyadmin/
    pma:
        image: phpmyadmin
        restart: always
        ports:
            - "${PMA_PORT}:80"
        environment:
            - PMA_ARBITRARY=1

    adminer:
        image: adminer
        restart: always
        ports:
            - "${ADMINER_PORT}:8080"
        environment:
            - TZ=${TZ}

    # https://docs.meilisearch.com/learn/getting_started/quick_start.html
    meilisearch:
        image: getmeili/meilisearch:latest
        volumes:
            - ${DATA_ROOT}meilisearch/data.ms:/data.ms
        ports:
            - "${MEILISEARCH_PORT}:7700"
        environment:
            - TZ=${TZ}
            - MEILI_MASTER_KEY=${MEILISEARCH_KEY}

    # https://github.com/mailhog/MailHog
    mailhog:
        image: mailhog/mailhog
        ports:
            - "${MAILHOG_SMTP_PORT}:1025"
            - "${MAILHOG_WEBUI_PORT}:8025"
        environment:
            - TZ=${TZ}
